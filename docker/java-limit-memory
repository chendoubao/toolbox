#! /bin/bash

# MAINTAINER Ma Qian<maqian258@gmail.com>

function get_value_as_mbytes() {
    key="$1"
    value="$2"

    if [ -z "$value" ]; then
        return 0
    fi
    num=`echo $value|sed 's/\([0-9]*\)[kKmMgG]*/\1/'`
    if [[ "$value" =~ [0-9]+$ ]]; then
        echo $((num / 1048576))
    elif [[ "$value" =~ [0-9]+[kK]$ ]]; then
        echo $((num / 1024))
    elif [[ "$value" =~ [0-9]+[mM]$ ]]; then
        echo $num
    elif [[ "$value" =~ [0-9]+[gG]$ ]]; then
        echo $((num * 1024))
    fi
    return 0;
}

function get_java_opt() {
    local opts="$1"
    local key="$2"
    local value=""

    if [[ "$opts" =~ .*$key=?.* ]]; then
        value=`echo $opts|sed "s/.*$key=*\([^ =]*\).*/\1/"`
    fi
    
    if [ "$key" = "-Xss" ] || [ "$key" = "-XX:ThreadStackSize" ]; then
        echo $value
        return 0
    fi

    if [ -n "$value" ] && [[ ! "$value" =~ [0-9]+[kKmMgG]*$ ]]; then
        echo invalid value $value for vm option $key
        return 1
    else
        echo $(get_value_as_mbytes "key" "$value")
        return 0
    fi
}

function get_env() {
    local key="$1"
    local value="${!key}"

    if [ -n "$value" ] && [[ ! "$value" =~ [0-9]+[kKmMgG]*$ ]]; then
        echo invalid value $value for environment variable $key
        return 1
    else
        echo $(get_value_as_mbytes "key" "$value")
        return 0
    fi
}

JAVACMD=`type java |awk '{print $(NF)}'`
$JAVACMD -version > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo could not find java program in your system, please install a java package or set JAVA_HOME environment variable. && exit 1
fi

trace="$X_TRACE"; [ "$trace" = "ON" ] && trace=on
interpret="$X_INT"; [ "$interpret" = "ON" ] && interpret=on
heap_ratio="$X_HEAP_RATIO"; [ -z "$heap_ratio" ] && heap_ratio=0.6

# apply memory limitation on when /sys/fs/cgroup/memory/memory.limit_in_bytes is set

if [ -f "/sys/fs/cgroup/memory/memory.limit_in_bytes" ]; then
    limit_in_bytes=$(cat /sys/fs/cgroup/memory/memory.limit_in_bytes)
    limit_in_mb=$((limit_in_bytes / 1048576))
fi
if [ -z "$limit_in_mb" ] || [ "$limit_in_mb" -gt "1048576" ]; then
    [ "$trace" = "on" ] && echo $JAVACMD $*
    exec $JAVACMD $*
else
    java_params="$*"

    max_heap_size=$(get_java_opt "$java_params" "-XX:MaxHeapSize")
    if [ $? -ne 0 ]; then
        echo $max_heap_size && exit 1
    fi
    if [ -z "$max_heap_size" ]; then
        max_heap_size=$(get_java_opt "$java_params" "-Xmx")
    fi
    if [ $max_heap_size -gt $limit_in_mb ]; then
        echo memory required exceed the limitation ${limit_in_mb}m && exit 1
    fi
    if [ -z "$max_heap_size" ]; then
        has_max_heap_size=0
        #max_heap_size=$((limit_in_mb - reserved_mem_size - max_meta_space_size - max_direct_memory_size - max_code_cache_size - max_compressed_class_size))
        max_heap_size=`echo $heap_ratio $limit_in_mb|awk '{print int($1 * $2)}'`
        [ "$trace" = "on" ] && echo jvm option -Xmx is not set, so we figure out the value ${max_heap_size}m
    fi

    min_heap_size=$(get_java_opt "$java_params" "-Xms")
    if [ $? -ne 0 ]; then
        echo $min_heap_size && exit 1
    fi
    if [ -z "$min_heap_size" ]; then
        has_min_heap_size=0
        min_heap_size=$((max_heap_size/2))
        [ "$trace" = "on" ] && echo vm option -Xms is not set, so we figure out the value ${min_heap_size}m
    fi

    thread_stack_size=$(get_java_opt "$java_params" "-Xss")
    if [ $? -ne 0 ]; then
        echo $thread_stack_size && exit 1
    fi
    if [ -z "$thread_stack_size" ]; then
        thread_stack_size=$(get_java_opt "$java_params" "-XX:ThreadStackSize")
    fi
    if [ -z "$thread_stack_size" ]; then
        has_thread_stack_size=0
        thread_stack_size=512k
    fi

    ext_params=""
    [ "$has_max_heap_size" = "0" ] && ext_params="$ext_params -Xmx${max_heap_size}m"
    [ "$has_min_heap_size" = "0" ] && ext_params="$ext_params -Xms${min_heap_size}m"
    [ "$has_thread_stack_size" = "0" ] && ext_params="$ext_params -Xss${thread_stack_size}"
    [ "$trace" = "on" ] && ext_params="$ext_params -XX:+PrintVMOptions -XX:+PrintCommandLineFlags"
    [ "$interpret" = "on" ] && ext_params="$ext_params -Xint"
    [ "$trace" = "on" ] && echo $JAVACMD $ext_params $java_params
    exec $JAVACMD $ext_params $java_params
fi
